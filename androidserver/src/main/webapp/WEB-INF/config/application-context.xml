<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd
        http://mybatis.org/schema/mybatis-spring 
        http://mybatis.org/schema/mybatis-spring.xsd">


  <!-- DataSource, DAO, SqlSessionFactory, Transaction 객체를 준비하기 위해
       빈을 찾는 장소를 지정한다.
       단, 페이지 컨트롤러는 제외한다. -->  
	<context:component-scan base-package="com.ldcc.android">
		<context:exclude-filter type="regex"
			expression="com.ldcc.android.controller.*" />
	</context:component-scan>

	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/andboarddb" />

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.ldcc.android.domain" />
		<property name="mapperLocations" value="classpath*:com/ldcc/android/dao/*Dao.xml" />
	</bean>


	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
		<property name="iterations" value="1000" />
	</bean>

	<mybatis:scan base-package="com.ldcc.android.dao" />

</beans>





























